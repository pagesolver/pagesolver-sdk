name: Publish to NPM

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - "README.md"
      - ".gitignore"
      - "LICENSE"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun test

      - name: Run linting
        run: bun run lint

      - name: Run type checking
        run: bun run type-check

      - name: Build package
        run: bun run build

      - name: Setup npm registry
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Setup Node.js for npm publishing
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Configure npm authentication
        run: |
          npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}

      - name: Check if version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(npm view @pagesolver/sdk version 2>/dev/null || echo "0.0.0")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "package-version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          if [ "$CURRENT_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "should-publish=true" >> $GITHUB_OUTPUT
            echo "Version changed from $CURRENT_VERSION to $PACKAGE_VERSION - will publish"
          else
            echo "should-publish=false" >> $GITHUB_OUTPUT
            echo "Version unchanged ($PACKAGE_VERSION) - skipping publish"
          fi

      - name: Publish to NPM
        if: steps.version-check.outputs.should-publish == 'true'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.should-publish == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version-check.outputs.package-version }}
          name: Release v${{ steps.version-check.outputs.package-version }}
          body: |
            ## Changes in v${{ steps.version-check.outputs.package-version }}

            Published automatically from main branch.

            ### Install
            ```bash
            npm install @pagesolver/sdk@${{ steps.version-check.outputs.package-version }}
            ```
          draft: false
          prerelease: false
